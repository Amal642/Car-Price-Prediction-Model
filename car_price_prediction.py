# -*- coding: utf-8 -*-
"""Car Price Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q88BeEIzuWOKXVzkqfeQYFo6aBWkQarv

**Car** **Price** **Prediction** 

Based on Various Features

1.Name

2.Year

3.KM Driven

4.fuel

5.Seller Type

6.Transmission

7.Owner
"""

import numpy as np
import pandas as pd

dataset=pd.read_csv("/content/drive/MyDrive/car_data.csv")
dataset.head()

dataset.info()

dataset["seller_type"].value_counts()

"""Dividing into dependent and independent Variables"""

x=dataset.iloc[:,[1,3,5,6]].values # to get array we use .values
y=dataset.iloc[:,[2]].values

"""using labelencoder"""

from sklearn.preprocessing import LabelEncoder
lb=LabelEncoder()
x[:,2]=lb.fit_transform(x[:,2])
lb1=LabelEncoder()
x[:,3]=lb1.fit_transform(x[:,3])#fit tries to find the relation btw the datas,transform used to transform the relation to labelencoder

print(x.shape)

"""Splitting the data into training data and testing data"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

print(x_train[0,:])

"""using any algorithm(here random forest regressor)"""

from sklearn.ensemble import RandomForestRegressor
#n_estimators=500,random_state=0
reg=RandomForestRegressor()
reg.fit(x_train,y_train)

accuracy=reg.score(x_test,y_test)
print(accuracy*100,"%")

new_data=[2017,7000,"Petrol","Manual"]
new_data[2]=lb.transform([new_data[2]])[0]
new_data[3]=lb1.transform([new_data[3]])[0]

print(new_data)
reg.predict([new_data])

import pickle
pickle.dump(reg,open("regressor.pkl",'wb'))
pickle.dump(lb,open("lb","wb"))
pickle.dump(lb1,open("lb1","wb"))